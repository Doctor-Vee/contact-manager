{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","Axios","get","res","newContacts","data","forEach","datum","user","name","email","phone","push","this","value","props","children","Component","Consumer","TextInputGroup","label","onChange","error","className","htmlFor","classnames","placeholder","defaultProps","AddContact","errors","onSubmit","e","a","preventDefault","newContact","console","log","post","history","target","bind","EditContact","updatedContact","match","params","put","Header","branding","href","to","Contact","showContactInfo","onDeleteClick","delete","onClick","style","cursor","float","color","marginRight","Contacts","key","About","NotFound","Test","title","task","userId","fetch","then","response","json","completed","toString","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"0UAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEEG,SAAUH,EAAMG,SAASC,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAGzC,IAAK,cACH,OAAO,eACFP,EADL,CAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAExC,IAAK,iBACH,OAAO,eACFH,EADL,CAEEG,SAAUH,EAAMG,SAASK,KACvB,SAAAH,GAAO,OAAIA,EAAQC,KAAOL,EAAOM,QAAQD,GAAMD,EAAUJ,EAAOM,QAAWF,OAGjF,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GACVO,SAAU,SAACT,GAAD,OAAY,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,QAHlE,oMA0BsBW,IAAMC,IAAI,8CA1BhC,OA0BUC,EA1BV,OA2BUC,EAAc,GACpBD,EAAIE,KAAKC,SAAQ,SAACC,GAAW,IAErBC,EAAO,CAAEb,GADoBY,EAA3BZ,GACWc,KADgBF,EAAvBE,KACaC,MADUH,EAAjBG,MACcC,MADGJ,EAAVI,OAEzBP,EAAYQ,KAAKJ,MAEnBK,KAAKb,SAAL,eACKa,KAAKxB,MADV,CAEEG,SAAS,GAAD,mBAAMqB,KAAKxB,MAAMG,UAAaY,MAnC5C,qIAwCI,OACE,kBAACnB,EAAQa,SAAT,CAAkBgB,MAAOD,KAAKxB,OAC3BwB,KAAKE,MAAMC,cA1CpB,GAA8BC,aAgDjBC,EAAWjC,EAAQiC,S,iBC3E1BC,EAAiB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOX,EAAyC,EAAzCA,KAAMK,EAAmC,EAAnCA,MAAOvB,EAA4B,EAA5BA,KAAM8B,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC5D,OACE,yBAAKC,UAAU,cACb,2BAAOC,QAASf,GAAOW,GACvB,2BACE7B,KAAMA,EACNkB,KAAMA,EACNc,UAAWE,IAAW,+BAAgC,CACpD,aAAcH,IAEhBI,YAAW,gBAAWN,EAAX,SACXN,MAAOA,EACPO,SAAUA,IAEXC,GAAS,yBAAKC,UAAU,oBAAoBD,KAcnDH,EAAeQ,aAAe,CAC5BpC,KAAM,QAGO4B,QCyDAS,E,4MAvFbvC,MAAQ,CACNoB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkB,OAAQ,I,EAGVC,S,uCAAW,WAAO/B,EAAUgC,GAAjB,iBAAAC,EAAA,yDACTD,EAAEE,iBACIC,EAFG,eAEe,EAAK7C,OAC7B8C,QAAQC,IAAIF,GACY,KAApBA,EAAWzB,KAJN,uBAKP,EAAKT,SAAS,CAAE6B,OAAQ,CAAEpB,KAAM,sBALzB,6BAQgB,KAArByB,EAAWxB,MARN,uBASP,EAAKV,SAAS,CAAE6B,OAAQ,CAAEnB,MAAO,uBAT1B,6BAYgB,KAArBwB,EAAWvB,MAZN,wBAaP,EAAKX,SAAS,CAAE6B,OAAQ,CAAElB,MAAO,uBAb1B,4CAiBSV,IAAMoC,KAAK,6CAA8CH,GAjBlE,QAiBH/B,EAjBG,OAkBTgC,QAAQC,IAAIjC,EAAIE,MAChBN,EAAS,CAAER,KAAM,cAAeK,QAASO,EAAIE,OAC7C,EAAKL,SAAS,CACZS,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkB,OAAQ,KAGV,EAAKd,MAAMuB,QAAQ1B,KAAK,KA3Bf,4C,0DA8BXS,SAAW,SAACU,GAAD,OAAO,EAAK/B,SAAL,eAAiB+B,EAAEQ,OAAO9B,KAAOsB,EAAEQ,OAAOzB,S,uDAElD,IAAD,SACwBD,KAAKxB,MAA5BoB,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MACrB,OACE,kBAACO,EAAD,MACG,SAACJ,GAAW,IACHf,EAAae,EAAbf,SACR,OACE,yBAAKwB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BAAMO,SAAU,EAAKA,SAASU,KAAK,EAAMzC,IACvC,kBAAC,EAAD,CACEqB,MAAM,OACNX,KAAK,OACLK,MAAOL,EACPY,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOpB,OAE3B,kBAAC,EAAD,CACEW,MAAM,QACN7B,KAAK,QACLkB,KAAK,QACLK,MAAOJ,EACPW,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOnB,QAE3B,kBAAC,EAAD,CACEU,MAAM,QACNX,KAAK,QACLK,MAAOH,EACPU,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOlB,QAE3B,2BACEpB,KAAK,SACLuB,MAAM,cACNS,UAAU,sC,GA5ELN,aC8GVwB,E,4MA7GbpD,MAAQ,CACNoB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkB,OAAQ,I,EAkBVC,S,uCAAW,WAAO/B,EAAUgC,GAAjB,mBAAAC,EAAA,yDACTD,EAAEE,iBAG0B,MAFtBS,EAFG,eAEmB,EAAKrD,QAEdoB,KAJV,uBAKP,EAAKT,SAAS,CAAE6B,OAAQ,CAAEpB,KAAM,sBALzB,6BAQoB,KAAzBiC,EAAehC,MARV,uBASP,EAAKV,SAAS,CAAE6B,OAAQ,CAAEnB,MAAO,uBAT1B,6BAYoB,KAAzBgC,EAAe/B,MAZV,wBAaP,EAAKX,SAAS,CAAE6B,OAAQ,CAAElB,MAAO,uBAb1B,kCAiBDhB,EAAO,EAAKoB,MAAM4B,MAAMC,OAAxBjD,GAjBC,UAmBSM,IAAM4C,IAAN,qDAC8BlD,GAAM+C,GApB7C,QAmBHvC,EAnBG,OAuBTJ,EAAS,CAAER,KAAM,iBAAkBK,QAASO,EAAIE,OAEhD8B,QAAQC,IAAIM,GAEZ,EAAK1C,SAAS,CACZS,KAAM,GACNC,MAAO,GACPC,MAAO,GACPkB,OAAQ,KAGV,EAAKd,MAAMuB,QAAQ1B,KAAK,KAlCf,4C,0DAqCXS,SAAW,SAACU,GAAD,OAAO,EAAK/B,SAAL,eAAiB+B,EAAEQ,OAAO9B,KAAOsB,EAAEQ,OAAOzB,S,mMAnDlDnB,EAAOkB,KAAKE,MAAM4B,MAAMC,OAAxBjD,G,SACUM,IAAMC,IAAN,qDAC8BP,I,OAD1CQ,E,SAIyBA,EAAIE,KAA3BI,E,EAAAA,KAAMC,E,EAAAA,MAAOC,E,EAAAA,MAErBE,KAAKb,SAAS,CACZS,OACAC,QACAC,U,qIA2CM,IAAD,SACwBE,KAAKxB,MAA5BoB,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MACrB,OACE,kBAACO,EAAD,MACG,SAACJ,GAAW,IACHf,EAAae,EAAbf,SACR,OACE,yBAAKwB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BAAMO,SAAU,EAAKA,SAASU,KAAK,EAAMzC,IACvC,kBAAC,EAAD,CACEqB,MAAM,OACNX,KAAK,OACLK,MAAOL,EACPY,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOpB,OAE3B,kBAAC,EAAD,CACEW,MAAM,QACN7B,KAAK,QACLkB,KAAK,QACLK,MAAOJ,EACPW,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOnB,QAE3B,kBAAC,EAAD,CACEU,MAAM,QACNX,KAAK,QACLK,MAAOH,EACPU,SAAU,EAAKA,SACfC,MAAO,EAAKjC,MAAMwC,OAAOlB,QAE3B,2BACEpB,KAAK,SACLuB,MAAM,iBACNS,UAAU,sC,GAlGJN,aCDpB6B,EAAS,SAAC/B,GAAW,IACjBgC,EAAahC,EAAbgC,SACR,OACE,yBAAKxB,UAAU,2DACb,yBAAKA,UAAU,aACb,uBAAGyB,KAAK,IAAIzB,UAAU,gBACnBwB,GAEH,6BACE,wBAAIxB,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM0B,GAAG,IAAI1B,UAAU,YACrB,uBAAGA,UAAU,gBADf,SAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM0B,GAAG,cAAc1B,UAAU,YAC/B,uBAAGA,UAAU,gBADf,QAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM0B,GAAG,SAAS1B,UAAU,YAC1B,uBAAGA,UAAU,oBADf,UAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM0B,GAAG,QAAQ1B,UAAU,YACzB,uBAAGA,UAAU,oBADf,cAYduB,EAAOnB,aAAe,CACpBoB,SAAU,UAOGD,QC/CTI,E,4MACJ7D,MAAQ,CACN8D,iBAAiB,G,EAGnBC,c,uCAAgB,WAAOzD,EAAII,GAAX,eAAAiC,EAAA,sEACI/B,IAAMoD,OAAN,qDAC8B1D,IAFlC,OACRQ,EADQ,OAKdgC,QAAQC,IAAIjC,GACZJ,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAN9B,2C,+GASN,IAAD,SAC4BkB,KAAKE,MAAMrB,QAAtCC,EADD,EACCA,GAAIc,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBwC,EAAoBtC,KAAKxB,MAAzB8D,gBACR,OACE,kBAACjC,EAAD,MACG,SAACJ,GAAW,IACHf,EAAae,EAAbf,SACR,OACE,yBAAKwB,UAAU,uBACb,4BACGd,EACA0C,EACC,uBACEG,QAAS,kBACP,EAAKtD,SAAS,CACZmD,iBAAkB,EAAK9D,MAAM8D,mBAGjC5B,UAAU,iBACVgC,MAAO,CAAEC,OAAQ,aAGnB,uBACEF,QAAS,kBACP,EAAKtD,SAAS,CACZmD,iBAAkB,EAAK9D,MAAM8D,mBAGjC5B,UAAU,mBACVgC,MAAO,CAAEC,OAAQ,aAIrB,uBACEF,QAAS,EAAKF,cAAcZ,KAAK,EAAM7C,EAAII,GAC3CwB,UAAU,eACVgC,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,SAErD,kBAAC,IAAD,CAAMT,GAAE,wBAAmBtD,IACzB,uBACE4B,UAAU,oBACVgC,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPC,YAAa,YAKpBR,EACC,wBAAI5B,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCb,GACxC,wBAAIa,UAAU,mBAAd,UAAwCZ,IAExC,a,GArEIM,aA8EtBiC,EAAQvB,aAAe,CACrBlB,KAAM,WACNC,MAAO,iBACPC,MAAO,mBASMuC,QC5FMU,E,uKAGb,OACI,kBAAC1C,EAAD,MACK,SAAAJ,GAAU,IACCtB,EAAasB,EAAbtB,SACR,OACI,oCACA,wBAAI+B,UAAU,kBAAd,IAAgC,0BAAMA,UAAU,eAAhB,WAAhC,SACC/B,EAASK,KAAI,SAAAH,GAAO,OACjB,kBAAC,EAAD,CACAmE,IAAKnE,EAAQC,GACbD,QAASA,e,GAbCuB,a,YCFvB,SAAS6C,IACpB,OACI,6BACI,wBAAIvC,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,uBAAGA,UAAU,kBAAb,kBCLG,SAASwC,IACpB,OACI,6BACI,wBAAIxC,UAAU,yBAAd,OACA,wBAAIA,UAAU,aAAd,kBACA,uBAAGA,UAAU,QAAb,oC,ICwBGyC,E,4MA3BX3E,MAAQ,CACJ4E,MAAO,GACPC,KAAM,GACNC,OAAQ,I,kEAIO,IAAD,OAClBC,MAAM,gDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU,EAAKvE,SAAS,CAC1BiE,MAAOM,EAAKN,MACZC,KAAMK,EAAKC,UAAUC,WACrBN,OAAQI,EAAKJ,c,+BAIX,IAAD,EAC2BtD,KAAKxB,MAA7B4E,EADH,EACGA,MAAOC,EADV,EACUA,KAAMC,EADhB,EACgBA,OACvB,OAAO,6BACH,4BAAKF,GACL,sCAAYE,GACZ,yCAAeD,Q,GAxBJjD,aCsCJyD,MAvBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKnD,UAAU,OACb,kBAAC,EAAD,CAAQwB,SAAS,oBACjB,yBAAKxB,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,eAAeC,UAAWjD,IAC5C,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,oBAAoBC,UAAWpC,IACjD,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,SAASC,UAAWf,IACtC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrC,kBAAC,IAAD,CAAOa,UAAWd,UClBZe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStC,MACvB,2DCbNuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAAtE,GACLa,QAAQb,MAAMA,EAAMuE,c","file":"static/js/main.abb649fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => contact.id === action.payload.id ? (contact = action.payload) : contact\r\n        )\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  // //using Fetch\r\n  // componentDidMount() {\r\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n  //   .then(response => response.json())\r\n  //   .then(data => {\r\n  //     const newContacts = [];\r\n  //     data.forEach(datum => {\r\n  //       const { id, name, email, phone } = datum\r\n  //       const user = { id, name, email, phone}\r\n  //       newContacts.push(user)\r\n  //     })\r\n  //     this.setState({\r\n  //     ...this.state,\r\n  //     contacts: [...this.state.contacts, ...newContacts],\r\n  //   })\r\n  // })\r\n  // }\r\n\r\n  // Using Axios\r\n  async componentDidMount() {\r\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    const newContacts = [];\r\n    res.data.forEach((datum) => {\r\n      const { id, name, email, phone } = datum;\r\n      const user = { id, name, email, phone };\r\n      newContacts.push(user);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      contacts: [...this.state.contacts, ...newContacts],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({ label, name, value, type, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={`Enter ${label} ... `}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import { v1 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const newContact = { ...this.state};\r\n    console.log(newContact);\r\n    if (newContact.name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (newContact.email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (newContact.phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const res = await Axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n    console.log(res.data);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import { v1 } from \"uuid\";\r\nimport Axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const { name, email, phone } = res.data;\r\n\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const updatedContact = { ...this.state };\r\n\r\n    if (updatedContact.name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (updatedContact.email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (updatedContact.phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`, updatedContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    console.log(updatedContact);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });     \r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/test\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                Test\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    const res = await Axios.delete(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    console.log(res);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {showContactInfo ? (\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state.showContactInfo,\r\n                      })\r\n                    }\r\n                    className=\"fas fa-sort-up\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                ) : (\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showContactInfo: !this.state.showContactInfo,\r\n                      })\r\n                    }\r\n                    className=\"fas fa-sort-down\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                )}\r\n\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"green\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.defaultProps = {\r\n  name: \"John Doe\",\r\n  email: \"jdoe@gmail.com\",\r\n  phone: \"555-555-555-555\",\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context'\r\n\r\nexport default class Contacts extends Component {\r\n\r\n    render() {       \r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return(\r\n                        <>\r\n                        <h1 className=\"display-4 mb-2\"> <span className=\"text-danger\">Contact</span> List</h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact \r\n                            key={contact.id}\r\n                            contact={contact}\r\n                            />\r\n                        ))}\r\n                    </>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-2 text-danger\">404</h1>\r\n            <h2 className=\"display-4\">Page Not Found</h2>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        task: \"\", \r\n        userId: \"\"\r\n        \r\n    }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((json) => this.setState({\r\n          title: json.title,\r\n          task: json.completed.toString(),\r\n          userId: json.userId\r\n      }));\r\n  }\r\n\r\n  render() {\r\n      const { title, task, userId } = this.state;\r\n    return <div>\r\n        <h1>{title}</h1>\r\n        <i>userId: {userId}</i>\r\n        <p>completed: {task}</p>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\n\nimport { Provider } from \"./context\";\n\nimport Contacts from \"./components/contacts/Contacts\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}